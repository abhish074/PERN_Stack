{"ast":null,"code":"var _jsxFileName = \"/Users/Shared/Previously Relocated Items/Security/AB/ism canada/project/SaskFundAppC/sask-fund-app/src/components/ListClientInformation.js\";\nimport React, { Fragment, useEffect, useState } from \"react\"; // import EditTodo from \"./EditTodo\";\n\nconst ListInfo = () => {\n  const [info, setTodos] = useState([]);\n\n  const getclientInformation = async () => {\n    try {\n      const response = await fetch(\"http://localhost:8000/Client_Financials\");\n      const jsonData = await response.json(); //await,sine it takes little time to parse the data\n\n      setTodos(jsonData);\n    } catch (err) {\n      console.error(err.message);\n    }\n  }; //useEffect will make a fetch reuquest to restful apis every time \n  //the current component is rendered...\n\n\n  useEffect(() => {\n    getclientInformation();\n  }, []); //  there are lot requests, hence using [] we make only one request\n\n  console.log(info);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, \" \", /*#__PURE__*/React.createElement(\"table\", {\n    class: \"table mt-5 text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 14\n    }\n  }, \"Client Id\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 14\n    }\n  }, \"Client Information\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, info.map(info => /*#__PURE__*/React.createElement(\"tr\", {\n    key: info.client_id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 15\n    }\n  }, info.client_id), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 15\n    }\n  }, info.information))))));\n};\n\nexport default ListInfo;","map":{"version":3,"sources":["/Users/Shared/Previously Relocated Items/Security/AB/ism canada/project/SaskFundAppC/sask-fund-app/src/components/ListClientInformation.js"],"names":["React","Fragment","useEffect","useState","ListInfo","info","setTodos","getclientInformation","response","fetch","jsonData","json","err","console","error","message","log","map","client_id","information"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,QAArC,QAAqD,OAArD,C,CACA;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AACrB,QAAM,CAACC,IAAD,EAAOC,QAAP,IAAmBH,QAAQ,CAAC,EAAD,CAAjC;;AAEA,QAAMI,oBAAoB,GAAG,YAAY;AACvC,QAAI;AACF,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,yCAAD,CAA5B;AACA,YAAMC,QAAQ,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAvB,CAFE,CAEqC;;AAEvCL,MAAAA,QAAQ,CAACI,QAAD,CAAR;AACD,KALD,CAKE,OAAOE,GAAP,EAAY;AACZC,MAAAA,OAAO,CAACC,KAAR,CAAcF,GAAG,CAACG,OAAlB;AACD;AACF,GATD,CAHqB,CAavB;AACA;;;AACEb,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,oBAAoB;AACrB,GAFQ,EAEN,EAFM,CAAT,CAfqB,CAiBd;;AAEPM,EAAAA,OAAO,CAACG,GAAR,CAAYX,IAAZ;AAEA,sBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,GADH,eAEE;AAAO,IAAA,KAAK,EAAC,wBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADH,eAEG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFH,CADF,CADF,eASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMGA,IAAI,CAACY,GAAL,CAASZ,IAAI,iBACZ;AAAI,IAAA,GAAG,EAAEA,IAAI,CAACa,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKb,IAAI,CAACa,SAAV,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKb,IAAI,CAACc,WAAV,CAFF,CADD,CANH,CATF,CAFF,CADF;AA6BD,CAlDD;;AAoDA,eAAef,QAAf","sourcesContent":["import React, { Fragment, useEffect, useState } from \"react\";\n// import EditTodo from \"./EditTodo\";\n\nconst ListInfo = () => {\n  const [info, setTodos] = useState([]);\n\n  const getclientInformation = async () => {\n    try {\n      const response = await fetch(\"http://localhost:8000/Client_Financials\");\n      const jsonData = await response.json();//await,sine it takes little time to parse the data\n\n      setTodos(jsonData);\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n//useEffect will make a fetch reuquest to restful apis every time \n//the current component is rendered...\n  useEffect(() => {\n    getclientInformation();\n  }, []);//  there are lot requests, hence using [] we make only one request\n\n  console.log(info);\n\n  return (\n    <Fragment>\n      {\" \"}\n      <table class=\"table mt-5 text-center\">\n        <thead>\n          <tr>\n             <th>Client Id</th>\n             <th>Client Information</th>\n            {/* <th>Edit</th>\n            <th>Delete</th> */}\n          </tr>\n        </thead>\n        <tbody>\n          {/* <tr>\n            <td>John</td>\n            <td>Doe</td>\n            <td>john@example.com</td>\n          </tr> */}\n          {info.map(info => (\n            <tr key={info.client_id}>\n              <td>{info.client_id}</td>\n              <td>{info.information}</td>\n            </tr>\n            \n          ))}\n        </tbody>\n      </table>\n    </Fragment>\n  );\n};\n\nexport default ListInfo;"]},"metadata":{},"sourceType":"module"}